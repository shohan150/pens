@import url(https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap);
.card,
.content,
body {
  overflow: hidden;
}
body {
  width: 100vw;
  height: 100vh;
  padding: 0;
  margin: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: black;
}
.card,
.container {
  display: flex;
  align-items: center;
}
.container {
  justify-content: center;
}
.card {
  width: 1280px;
  height: 720px;
  margin: 0;
  justify-content: center;
}
.container-full,
.content {
  width: 1000px;
  height: 562px;
}
.content {
  border-radius: 40px;
  animation: 90s linear infinite brightness;
}
.container-full,
.face {
  display: flex;
  align-items: center;
  overflow: hidden;
}
.container-full {
  margin: 0;
  justify-content: center;
  transform: scale(1);
  animation: 90s linear infinite zoom-in;
}

/* to be studied */
.hue {
  top: 0;
  left: 0;
  z-index: 3;
  width: 100%;
  height: 100%;
  mix-blend-mode: overlay;
  background: #1e5799;
  background: radial-gradient(ellipse at center, #1e5799 0, #7db9e8 100%);
  opacity: 1;
}
.hue.animated {
  -webkit-animation: 8s infinite filter-animation;
  animation: 8s infinite filter-animation;
}

/* -----  to be studied  ---- */

.backgroundImage {
  position: absolute;
  width: 1000px;
}

.boyImage {
  position: absolute;
  width: 1000px;
  z-index: 2;
  animation: 90s linear infinite blur;
}

.cube,
.face {
  width: 870px;
  height: 190px;
}
.cube {
  position: relative;
  transform-style: preserve-3d;
  perspective: 480px;
  perspective-origin: 51% 70%;
}
.face,
.hue {
  position: absolute;
}
.face {
  background: 0 0;
  border: 0 solid #000;
  opacity: 0.5;
}
.bottom,
.top {
  width: 870px;
  height: 870px;
}
p {
  white-space: nowrap;
  overflow: hidden;
  font-family: "Bebas Neue", sans-serif;
  font-weight: 400;
  font-size: calc(6em + (190px / 10) * 0.7);
  padding-top: 20px;
  color: #fff;
}
span {
  color: red;
}

/* all face divs are of a same size: 870x190 px. front k z axis borabor samne niye asa hoyeche. jodio tar kono kaj dekhi na. but se back screen theke z axis borabor 435px samne ese kindof full screen jure thake. But eta maay be formality ba good practice hisebe likhe rakhse. Main kaj .back e. to tar oppposite e kichu rakha better se hisebe hoito rekheche.  */
.front {
  transform: translateZ(435px);
  display: none;
}

/* back k piche niye screen er sathe fit kore hoyeche translateZ diye. RotateY diye screen k 180deg ghurano hoyeche. https://css-tricks.com/almanac/properties/t/transform/#aa-rotate. Abar scale(-1) diye abar ghurieche. Eta kno korlo thik bujhlam na. But sudhu translateZ dile e code kaj korbe.  */
.back {
  /* transform: translateZ(-435px); */
  transform: translateZ(-435px) rotateY(180deg) scaleX(-1);
}

/* X axis borabor div take side e niye rotate koreche. */
.left {
  /* transform: translateX(-435px) rotateY(90deg); */
  transform: translateX(-435px) rotateY(-90deg) scaleX(-1);
}
.right {
  /* transform: translateX(435px) rotateY(-90deg); */
  transform: translateX(435px) rotateY(90deg) scaleX(-1);
}
.top {
  /* transform: translateX(-435px) rotateY(90deg); */
  transform: translateY(-435px) rotateX(90deg) scaleY(-1);
}
.bottom {
  /* transform: translateX(-245px) rotateY(90deg); */
  transform: translateY(-245px) rotateX(-90deg) scaleY(-1);
}

/* margin-left:480px deyar karon initially ekta look deya j left side empty chilo kichuta. sekhan theke text flow howa shuru korlo.  */
.left p {
  margin-left: 480px;
  animation: 90s linear infinite left;
}

/* .back r .right er value gulo starting/left side text er sathe match kore j position lage shei position set kora hoyeche. */
.back p {
  margin-left: -390px;
  animation: 90s linear infinite back;
}
.right p {
  margin-left: -1260px;
  animation: 90s linear infinite right;
}
@keyframes left {
  100% {
    margin-left: -54000px;
  }
}
@keyframes back {
  100% {
    margin-left: -54870px;
  }
}
@keyframes right {
  100% {
    margin-left: -55740px;
  }
}

.container-reflect {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 380px;
  filter: blur(10px);
}

/* value same as main. perspective-origin makes the difference. The perspective-origin property defines at from which position the user is looking at the 3D-positioned element. */
.container-reflect .cube {
  perspective-origin: 51% -30%;
}

.container-reflect .back {
  transform: translateZ(-435px) rotateY(180deg) scaleX(-1) scaleY(-1);
}
.container-reflect .left {
  transform: translateX(-435px) rotateY(-90deg) scaleX(-1) scaleY(-1);
}
.container-reflect .right {
  transform: translateX(435px) rotateY(90deg) scaleX(-1) scaleY(-1);
}

.container-reflect p {
  transform: scaleY(70%);
}

/* filter is applied to define/change various visual effects of an element; mostly for images. */

/* hue effect control */
@keyframes filter-animation {
  0%,
  100% {
    filter: hue-rotate(0deg);
  }
  50% {
    filter: hue-rotate(100deg);
  }
}

/* content zoom in  */
@keyframes zoom-in {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(1.5);
  }
}

/* blurs the boy */
@keyframes blur {
  0% {
    filter: blur(0px);
  }
  100% {
    filter: blur(3px);
  }
}

/* changes the brightness & contrast */
@keyframes brightness {
  0% {
    filter: brightness(1) contrast(1);
  }
  100% {
    filter: brightness(0.65) contrast(1.3);
  }
}
